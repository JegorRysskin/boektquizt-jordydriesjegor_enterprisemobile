// <auto-generated />
using System;
using BoektQuiz.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BoektQuiz.Migrations
{
    [DbContext(typeof(BoektQuizContext))]
    [Migration("20200110172143_AddedAnswersAndTeams")]
    partial class AddedAnswersAndTeams
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("BoektQuiz.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AnswerString")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id", "QuestionId");

                    b.HasIndex("TeamId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            QuestionId = -1,
                            AnswerString = "Dummy Antwoord 1"
                        },
                        new
                        {
                            Id = -2,
                            QuestionId = -2,
                            AnswerString = "Dummy Antwoord 2"
                        },
                        new
                        {
                            Id = -3,
                            QuestionId = -3,
                            AnswerString = "Dummy Antwoord 3"
                        },
                        new
                        {
                            Id = -4,
                            QuestionId = -4,
                            AnswerString = "Dummy Antwoord 4"
                        },
                        new
                        {
                            Id = -5,
                            QuestionId = -5,
                            AnswerString = "Dummy Antwoord 5"
                        },
                        new
                        {
                            Id = -6,
                            QuestionId = -6,
                            AnswerString = "Dummy Antwoord 6"
                        },
                        new
                        {
                            Id = -7,
                            QuestionId = -7,
                            AnswerString = "Dummy Antwoord 7"
                        },
                        new
                        {
                            Id = -8,
                            QuestionId = -8,
                            AnswerString = "Dummy Antwoord 8"
                        },
                        new
                        {
                            Id = -9,
                            QuestionId = -9,
                            AnswerString = "Dummy Antwoord 9"
                        },
                        new
                        {
                            Id = -10,
                            QuestionId = -10,
                            AnswerString = "Dummy Antwoord 10"
                        });
                });

            modelBuilder.Entity("BoektQuiz.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QuestionString")
                        .HasColumnType("TEXT");

                    b.HasKey("Id", "RoundId");

                    b.HasIndex("RoundId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            RoundId = -1,
                            QuestionString = "Vraag 1"
                        },
                        new
                        {
                            Id = -2,
                            RoundId = -1,
                            QuestionString = "Vraag 2"
                        },
                        new
                        {
                            Id = -3,
                            RoundId = -1,
                            QuestionString = "Vraag 3"
                        },
                        new
                        {
                            Id = -4,
                            RoundId = -1,
                            QuestionString = "Vraag 4"
                        },
                        new
                        {
                            Id = -5,
                            RoundId = -1,
                            QuestionString = "Vraag 5"
                        },
                        new
                        {
                            Id = -6,
                            RoundId = -1,
                            QuestionString = "Vraag 6"
                        },
                        new
                        {
                            Id = -7,
                            RoundId = -1,
                            QuestionString = "Vraag 7"
                        },
                        new
                        {
                            Id = -8,
                            RoundId = -1,
                            QuestionString = "Vraag 8"
                        },
                        new
                        {
                            Id = -9,
                            RoundId = -1,
                            QuestionString = "Vraag 9"
                        },
                        new
                        {
                            Id = -10,
                            RoundId = -1,
                            QuestionString = "Vraag 10"
                        });
                });

            modelBuilder.Entity("BoektQuiz.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rounds");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Enabled = false,
                            Name = "Ronde 0"
                        });
                });

            modelBuilder.Entity("BoektQuiz.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Scores")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Enabled = true,
                            Name = "Dummy Team",
                            Scores = 0.0
                        });
                });

            modelBuilder.Entity("BoektQuiz.Models.Answer", b =>
                {
                    b.HasOne("BoektQuiz.Models.Team", null)
                        .WithMany("Answers")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("BoektQuiz.Models.Question", b =>
                {
                    b.HasOne("BoektQuiz.Models.Round", null)
                        .WithMany("Questions")
                        .HasForeignKey("RoundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
